// <auto-generated />
using System;
using DeliveryDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeliveryWebService.Migrations
{
    [DbContext(typeof(DeliveryDbContext))]
    [Migration("20210421154412_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("delivery-db")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ClientSupply", b =>
                {
                    b.Property<int>("ClientsId")
                        .HasColumnType("integer");

                    b.Property<int>("SuppliesId")
                        .HasColumnType("integer");

                    b.HasKey("ClientsId", "SuppliesId");

                    b.HasIndex("SuppliesId");

                    b.ToTable("ClientSupply");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("SystemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SystemId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("DeviceTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OrderCode")
                        .HasColumnType("text");

                    b.Property<int>("SupplyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeviceTypeId");

                    b.HasIndex("SupplyId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.DeviceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("SupplyCodeName")
                        .HasColumnType("text");

                    b.Property<int>("SystemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SystemId");

                    b.ToTable("DeviceTypes");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Supply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ContractId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("Year")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.System", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Systems");
                });

            modelBuilder.Entity("ClientSupply", b =>
                {
                    b.HasOne("DeliveryDatabase.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeliveryDatabase.Models.Supply", null)
                        .WithMany()
                        .HasForeignKey("SuppliesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Contract", b =>
                {
                    b.HasOne("DeliveryDatabase.Models.System", "System")
                        .WithMany("Contracts")
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("System");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Device", b =>
                {
                    b.HasOne("DeliveryDatabase.Models.DeviceType", "DeviceType")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeliveryDatabase.Models.Supply", "Supply")
                        .WithMany("Devices")
                        .HasForeignKey("SupplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceType");

                    b.Navigation("Supply");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.DeviceType", b =>
                {
                    b.HasOne("DeliveryDatabase.Models.System", "System")
                        .WithMany("DeviceTypes")
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("System");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Status", b =>
                {
                    b.HasOne("DeliveryDatabase.Models.Device", "Device")
                        .WithMany("Statuses")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Supply", b =>
                {
                    b.HasOne("DeliveryDatabase.Models.Contract", "Contract")
                        .WithMany("Supplies")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.System", b =>
                {
                    b.HasOne("DeliveryDatabase.Models.Supplier", "Supplier")
                        .WithMany("Systems")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Contract", b =>
                {
                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Device", b =>
                {
                    b.Navigation("Statuses");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.DeviceType", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Supplier", b =>
                {
                    b.Navigation("Systems");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.Supply", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("DeliveryDatabase.Models.System", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("DeviceTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
